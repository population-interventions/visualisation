import prepareEngine from './engines';
import { getPrefixedEntry } from './attr.js';

const getAffix = (source, affix) => typeof affix === 'function' ? affix(source) : affix || '';

export default function bibliography(data, options = {}) {
  const {
    template = 'apa',
    lang = 'en-US',
    format = 'text',
    nosort = false
  } = options;
  const citeproc = prepareEngine(data, template, lang, format);
  const sortedIds = citeproc.updateItems(data.map(entry => entry.id), nosort);

  if (options.append || options.prepend) {
    const {
      append,
      prepend
    } = options;
    const items = data.reduce((items, entry) => {
      items[entry.id] = entry;
      return items;
    }, {});

    citeproc.sys.wrapBibliographyEntry = function (id) {
      const entry = items[id];
      return [getAffix(entry, prepend), getAffix(entry, append)];
    };
  } else {
    citeproc.sys.wrapBibliographyEntry = () => ['', ''];
  }

  const bibliography = citeproc.makeBibliography();
  const [{
    bibstart,
    bibend
  }, bibBody] = bibliography;
  const entries = bibBody.map((element, index) => getPrefixedEntry(element, sortedIds[index]));
  return bibstart + entries.join('') + bibend;
}